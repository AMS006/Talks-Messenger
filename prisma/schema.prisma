// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  name                      String?
  email                     String @unique
  password                  String?
  image                     String?
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  emailVerified             DateTime?
  resetCode                 String?


  conversationIds           String[] @db.ObjectId
  conversations             Conversation[]  @relation(fields: [conversationIds], references: [id])

  accounts                  Account[]
  messages                  Message[] @relation("Sender")
}

model Account {
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  userId                    String   @db.ObjectId
  type                      String
  provider                  String
  providerAccountId         String
  refresh_token             String?  @db.String
  access_token              String?  @db.String
  expires_at                Int?
  token_type                String?
  scope                     String?
  id_token                  String?  @db.String
  session_state             String?

  user                      User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  isGroup                   Boolean?
  name                      String?

  userIds                   String[] @db.ObjectId
  users                     User[] @relation(fields: [userIds], references: [id])

  messages                  Message[]

  lastMessageAt             DateTime @default(now())
  createdAt                 DateTime @default(now())
}

model Message {
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  text                      String?
  image                     String?
  createdAt                 DateTime @default(now())
  messageType               String @default("text")

  conversationId            String @db.ObjectId
  conversation              Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  senderId                  String @db.ObjectId
  sender                    User @relation("Sender",fields: [senderId], references: [id], onDelete: Cascade)
}